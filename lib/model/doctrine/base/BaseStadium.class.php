<?php

/**
 * BaseStadium
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $stadium_ext_id
 * @property string $official_name
 * @property string $name
 * @property string $nickname
 * @property string $capacity
 * @property string $address
 * @property string $inauguration
 * @property string $location
 * @property string $geo_location
 * @property Doctrine_Collection $Game
 * 
 * @method integer             getStadiumExtId()   Returns the current record's "stadium_ext_id" value
 * @method string              getOfficialName()   Returns the current record's "official_name" value
 * @method string              getName()           Returns the current record's "name" value
 * @method string              getNickname()       Returns the current record's "nickname" value
 * @method string              getCapacity()       Returns the current record's "capacity" value
 * @method string              getAddress()        Returns the current record's "address" value
 * @method string              getInauguration()   Returns the current record's "inauguration" value
 * @method string              getLocation()       Returns the current record's "location" value
 * @method string              getGeoLocation()    Returns the current record's "geo_location" value
 * @method Doctrine_Collection getGame()           Returns the current record's "Game" collection
 * @method Stadium             setStadiumExtId()   Sets the current record's "stadium_ext_id" value
 * @method Stadium             setOfficialName()   Sets the current record's "official_name" value
 * @method Stadium             setName()           Sets the current record's "name" value
 * @method Stadium             setNickname()       Sets the current record's "nickname" value
 * @method Stadium             setCapacity()       Sets the current record's "capacity" value
 * @method Stadium             setAddress()        Sets the current record's "address" value
 * @method Stadium             setInauguration()   Sets the current record's "inauguration" value
 * @method Stadium             setLocation()       Sets the current record's "location" value
 * @method Stadium             setGeoLocation()    Sets the current record's "geo_location" value
 * @method Stadium             setGame()           Sets the current record's "Game" collection
 * 
 * @package    futebol
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStadium extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('stadium');
        $this->hasColumn('stadium_ext_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('official_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('nickname', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('capacity', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('inauguration', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('location', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('geo_location', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Game', array(
             'local' => 'id',
             'foreign' => 'stadium_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable();
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}