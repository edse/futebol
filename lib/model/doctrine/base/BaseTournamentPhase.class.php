<?php

/**
 * BaseTournamentPhase
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $tournament_phase_ext_id
 * @property string $name
 * @property string $description
 * @property integer $display_order
 * @property string $location
 * @property string $type
 * @property string $classification_type
 * @property boolean $is_active
 * @property Doctrine_Collection $TournamentPhaseStrips
 * 
 * @method integer             getTournamentPhaseExtId()    Returns the current record's "tournament_phase_ext_id" value
 * @method string              getName()                    Returns the current record's "name" value
 * @method string              getDescription()             Returns the current record's "description" value
 * @method integer             getDisplayOrder()            Returns the current record's "display_order" value
 * @method string              getLocation()                Returns the current record's "location" value
 * @method string              getType()                    Returns the current record's "type" value
 * @method string              getClassificationType()      Returns the current record's "classification_type" value
 * @method boolean             getIsActive()                Returns the current record's "is_active" value
 * @method Doctrine_Collection getTournamentPhaseStrips()   Returns the current record's "TournamentPhaseStrips" collection
 * @method TournamentPhase     setTournamentPhaseExtId()    Sets the current record's "tournament_phase_ext_id" value
 * @method TournamentPhase     setName()                    Sets the current record's "name" value
 * @method TournamentPhase     setDescription()             Sets the current record's "description" value
 * @method TournamentPhase     setDisplayOrder()            Sets the current record's "display_order" value
 * @method TournamentPhase     setLocation()                Sets the current record's "location" value
 * @method TournamentPhase     setType()                    Sets the current record's "type" value
 * @method TournamentPhase     setClassificationType()      Sets the current record's "classification_type" value
 * @method TournamentPhase     setIsActive()                Sets the current record's "is_active" value
 * @method TournamentPhase     setTournamentPhaseStrips()   Sets the current record's "TournamentPhaseStrips" collection
 * 
 * @package    futebol
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTournamentPhase extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tournament_phase');
        $this->hasColumn('tournament_phase_ext_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('display_order', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('location', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('classification_type', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('is_active_idx', array(
             'fields' => 
             array(
              0 => 'is_active',
             ),
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('TournamentPhaseStrip as TournamentPhaseStrips', array(
             'local' => 'id',
             'foreign' => 'tournament_phase_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable();
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}